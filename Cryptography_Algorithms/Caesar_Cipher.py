"""
Шифр Цезаря — это один из самых старых известных шифров. Это метод шифрования, при котором каждая буква в тексте
заменяется другой буквой, сдвинутой на фиксированное число позиций в алфавите. Например, при сдвиге на 3, буква 'A'
станет 'D', 'B' станет 'E', и так далее.

Процесс шифрования и дешифрования в шифре Цезаря очень похож: для шифрования текста нужно сдвинуть каждую букву на
заданное число позиций вперед по алфавиту, а для дешифрования — на то же число позиций назад.
"""


def caesar_cipher_encrypt(text, shift):
    result = ""
    for i in range(len(text)):
        char = text[i]
        if char.isalpha():  # Проверяем, является ли символ буквой
            # Сдвигаем букву и обрабатываем перенос через 'Z'
            if char.isupper():
                result += chr((ord(char) + shift - 65) % 26 + 65)
            else:
                result += chr((ord(char) + shift - 97) % 26 + 97)
        else:
            # Неалфавитные символы оставляем без изменения
            result += char
    return result


def caesar_cipher_decrypt(text, shift):
    return caesar_cipher_encrypt(text, -shift)


# Пример использования
shift = 3
original_text = "The Caesar Cipher"
encrypted_text = caesar_cipher_encrypt(original_text, shift)
decrypted_text = caesar_cipher_decrypt(encrypted_text, shift)

print("Original text:", original_text)
print("Encrypted text:", encrypted_text)
print("Decrypted text:", decrypted_text)

"""
В этом примере мы используем функцию ord для получения кода символа и chr для преобразования кода обратно в символ. 
Сдвиг сначала добавляется к коду символа, затем результат ограничивается диапазоном от 0 до 25 с использованием 
операции модуля (% 26), и, наконец, корректируется на начальное положение буквенного диапазона 
('A' для заглавных и 'a' для строчных букв). Неалфавитные символы оставляются без изменений. 
Чтобы дешифровать сообщение, достаточно зашифровать его с отрицательным сдвигом.
"""
