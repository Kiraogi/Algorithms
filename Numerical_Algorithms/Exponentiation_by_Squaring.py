"""
Алгоритм быстрого возведения в степень, также известный как возведение в степень посредством возведения в квадрат,
позволяет возводить число в степень за логарифмическое время от количества операций умножения.

Алгоритм работает следующим образом:
1) Если степень exponent отрицательная, конвертируем задачу в возведение обратного числа в положительную степень.
2) Инициализируем result единицей, так как любое число в степени 0 равно 1.
3) Пока exponent больше нуля, выполняем следующие шаги:
    Если exponent нечетное, умножаем result на base.
    Возводим base в квадрат, чтобы использовать его для следующего шага умножения.
    Делим exponent на 2, отбрасывая остаток (это эквивалентно сдвигу вправо на один бит).

Этот метод эффективен, потому что он уменьшает количество необходимых умножений за счет использования свойства
( a^{b+c} = a^b \cdot a^c ) и ( (a^b)^2 = a^{2b} ), позволяющего раскладывать степень на сумму степеней двойки.
"""


def exponentiation_by_squaring(base, exponent):
    if exponent < 0:  # Если степень отрицательная, используем обратное число
        base = 1 / base
        exponent = -exponent
    result = 1
    while exponent > 0:
        if exponent % 2 == 1:  # Если степень нечетная, умножаем результат на основание
            result *= base
        base *= base  # Возводим основание в квадрат
        exponent //= 2  # Делим степень на 2
    return result


# Пример использования функции:
print(exponentiation_by_squaring(2, 10))  # Выведет 1024
