"""
Пирамидальная сортировка (Heap Sort)
Пирамидальная сортировка — это сравнительный алгоритм сортировки, основанный на двоичной куче.
Он разделяет массив на отсортированную и неотсортированную области, и итеративно уменьшает размер неотсортированной
области, извлекая наибольший элемент из кучи и помещая его в конец неотсортированной области.

Алгоритм состоит из следующих шагов:
1) Построение кучи (heap) из элементов массива.
2)Извлечение элементов из кучи таким образом, чтобы получить отсортированный массив.

Построение кучи: Элементы массива рассматриваются как часть полного двоичного дерева.
Массив преобразуется в двоичную кучу путем применения операции "просеивания вниз" начиная с последнего родительского узла
до корня кучи.

Извлечение элементов: После того как куча построена, максимальный элемент (находящийся в корне кучи) удаляется
из нее и заменяется последним элементом кучи. Дерево снова превращается в кучу применением "просеивания вниз".
Процесс повторяется до тех пор, пока все элементы не будут извлечены.
"""

def heapify(arr, n, i):
    largest = i
    left = 2 * i + 1
    right = 2 * i + 2

    if left < n and arr[largest] < arr[left]:
        largest = left

    if right < n and arr[largest] < arr[right]:
        largest = right

    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]
        heapify(arr, n, largest)

def heap_sort(arr):
    n = len(arr)

    # Построение кучи (перегруппируем массив)
    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)

    # Один за другим извлекаем элементы из кучи
    for i in range(n-1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]  # swap
        heapify(arr, i, 0)

# Пример использования
array = [12, 11, 13, 5, 6, 7]
heap_sort(array)
n = len(array)
print("Sorted array is")
for i in range(n):
    print("%d" % array[i], end=' ')